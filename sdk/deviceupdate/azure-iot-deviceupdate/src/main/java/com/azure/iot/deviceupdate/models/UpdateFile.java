// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.iot.deviceupdate.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;
import java.util.Map;

/**
 * Update file metadata.
 */
@Immutable
public final class UpdateFile {
    /*
     * File name.
     */
    @Generated
    @JsonProperty(value = "fileName")
    private String fileName;

    /*
     * File size in number of bytes.
     */
    @Generated
    @JsonProperty(value = "sizeInBytes")
    private long sizeInBytes;

    /*
     * Mapping of hashing algorithm to base64 encoded hash values.
     */
    @Generated
    @JsonProperty(value = "hashes")
    private Map<String, String> hashes;

    /*
     * File MIME type.
     */
    @Generated
    @JsonProperty(value = "mimeType")
    private String mimeType;

    /*
     * Anti-malware scan result.
     */
    @Generated
    @JsonProperty(value = "scanResult")
    private String scanResult;

    /*
     * Anti-malware scan details.
     */
    @Generated
    @JsonProperty(value = "scanDetails")
    private String scanDetails;

    /*
     * Optional file properties (not consumed by service but pass-through to device).
     */
    @Generated
    @JsonProperty(value = "properties")
    private Map<String, String> properties;

    /*
     * File identity, generated by server at import time.
     */
    @Generated
    @JsonProperty(value = "fileId")
    private String fileId;

    /*
     * Optional related files metadata used together DownloadHandler metadata to
     * download payload file.
     */
    @Generated
    @JsonProperty(value = "relatedFiles")
    private List<UpdateFileBase> relatedFiles;

    /*
     * Optional download handler for utilizing related files to download payload file.
     */
    @Generated
    @JsonProperty(value = "downloadHandler")
    private UpdateFileDownloadHandler downloadHandler;

    /*
     * File ETag.
     */
    @Generated
    @JsonProperty(value = "etag")
    private String etag;

    /**
     * Creates an instance of UpdateFile class.
     * 
     * @param fileName the fileName value to set.
     * @param sizeInBytes the sizeInBytes value to set.
     * @param hashes the hashes value to set.
     * @param fileId the fileId value to set.
     */
    @Generated
    @JsonCreator
    private UpdateFile(@JsonProperty(value = "fileName") String fileName,
        @JsonProperty(value = "sizeInBytes") long sizeInBytes,
        @JsonProperty(value = "hashes") Map<String, String> hashes, @JsonProperty(value = "fileId") String fileId) {
        this.fileName = fileName;
        this.sizeInBytes = sizeInBytes;
        this.hashes = hashes;
        this.fileId = fileId;
    }

    /**
     * Get the fileName property: File name.
     * 
     * @return the fileName value.
     */
    @Generated
    public String getFileName() {
        return this.fileName;
    }

    /**
     * Get the sizeInBytes property: File size in number of bytes.
     * 
     * @return the sizeInBytes value.
     */
    @Generated
    public long getSizeInBytes() {
        return this.sizeInBytes;
    }

    /**
     * Get the hashes property: Mapping of hashing algorithm to base64 encoded hash values.
     * 
     * @return the hashes value.
     */
    @Generated
    public Map<String, String> getHashes() {
        return this.hashes;
    }

    /**
     * Get the mimeType property: File MIME type.
     * 
     * @return the mimeType value.
     */
    @Generated
    public String getMimeType() {
        return this.mimeType;
    }

    /**
     * Get the scanResult property: Anti-malware scan result.
     * 
     * @return the scanResult value.
     */
    @Generated
    public String getScanResult() {
        return this.scanResult;
    }

    /**
     * Get the scanDetails property: Anti-malware scan details.
     * 
     * @return the scanDetails value.
     */
    @Generated
    public String getScanDetails() {
        return this.scanDetails;
    }

    /**
     * Get the properties property: Optional file properties (not consumed by service but pass-through to device).
     * 
     * @return the properties value.
     */
    @Generated
    public Map<String, String> getProperties() {
        return this.properties;
    }

    /**
     * Get the fileId property: File identity, generated by server at import time.
     * 
     * @return the fileId value.
     */
    @Generated
    public String getFileId() {
        return this.fileId;
    }

    /**
     * Get the relatedFiles property: Optional related files metadata used together DownloadHandler metadata to
     * download payload file.
     * 
     * @return the relatedFiles value.
     */
    @Generated
    public List<UpdateFileBase> getRelatedFiles() {
        return this.relatedFiles;
    }

    /**
     * Get the downloadHandler property: Optional download handler for utilizing related files to download payload
     * file.
     * 
     * @return the downloadHandler value.
     */
    @Generated
    public UpdateFileDownloadHandler getDownloadHandler() {
        return this.downloadHandler;
    }

    /**
     * Get the etag property: File ETag.
     * 
     * @return the etag value.
     */
    @Generated
    public String getEtag() {
        return this.etag;
    }
}
