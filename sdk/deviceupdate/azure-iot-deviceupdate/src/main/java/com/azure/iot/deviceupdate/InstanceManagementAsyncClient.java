// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.iot.deviceupdate;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceClient;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.exception.ClientAuthenticationException;
import com.azure.core.exception.HttpResponseException;
import com.azure.core.exception.ResourceModifiedException;
import com.azure.core.exception.ResourceNotFoundException;
import com.azure.core.http.rest.RequestOptions;
import com.azure.core.http.rest.Response;
import com.azure.core.util.BinaryData;
import com.azure.core.util.FluxUtil;
import com.azure.iot.deviceupdate.implementation.InstanceManagementClientImpl;
import com.azure.iot.deviceupdate.models.Limits;
import reactor.core.publisher.Mono;

/**
 * Initializes a new instance of the asynchronous InstanceManagementClient type.
 */
@ServiceClient(builder = InstanceManagementClientBuilder.class, isAsync = true)
public final class InstanceManagementAsyncClient {
    @Generated
    private final InstanceManagementClientImpl serviceClient;

    /**
     * Initializes an instance of InstanceManagementAsyncClient class.
     * 
     * @param serviceClient the service client implementation.
     */
    @Generated
    InstanceManagementAsyncClient(InstanceManagementClientImpl serviceClient) {
        this.serviceClient = serviceClient;
    }

    /**
     * Gets the instance limits for active deployments, devices, device classes, and
     * groups.
     * <p>
     * <strong>Response Body Schema</strong>
     * </p>
     * <pre>{@code
     * {
     *     counters (Required): {
     *         deviceCount (Required): {
     *             usage: int (Required)
     *             quota: int (Required)
     *         }
     *         deviceClassCount (Required): (recursive schema, see deviceClassCount above)
     *         deviceGroupCount (Required): (recursive schema, see deviceGroupCount above)
     *         activeDeploymentCount (Required): (recursive schema, see activeDeploymentCount above)
     *         deploymentCount (Required): (recursive schema, see deploymentCount above)
     *     }
     * }
     * }</pre>
     * 
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the instance limits for active deployments, devices, device classes, and
     * groups along with {@link Response} on successful completion of {@link Mono}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<BinaryData>> getLimitsWithResponse(RequestOptions requestOptions) {
        return this.serviceClient.getLimitsWithResponseAsync(requestOptions);
    }

    /**
     * Gets the instance limits for active deployments, devices, device classes, and
     * groups.
     * 
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the instance limits for active deployments, devices, device classes, and
     * groups on successful completion of {@link Mono}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Limits> getLimits() {
        // Generated convenience method for getLimitsWithResponse
        RequestOptions requestOptions = new RequestOptions();
        return getLimitsWithResponse(requestOptions).flatMap(FluxUtil::toMono)
            .map(protocolMethodData -> protocolMethodData.toObject(Limits.class));
    }
}
